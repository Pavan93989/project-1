import { useEffect, useState } from 'react';
import { create } from 'zustand';

// Zustand store for job listings
const useJobStore = create((set) => ({
  jobs: [],
  loading: false,
  error: null,
  fetchJobs: async () => {
    set({ loading: true, error: null });
    try {
      const response = await fetch('/api/jobs');
      if (!response.ok) throw new Error('Failed to fetch jobs');
      const data = await response.json();
      set({ jobs: data, loading: false });
    } catch (error) {
      set({ error: error.message, loading: false });
    }
  },
}));

export default function Home() {
  const { jobs, fetchJobs, loading, error } = useJobStore();

  useEffect(() => {
    fetchJobs();
  }, []);

  return (
    <div className="min-h-screen bg-gray-100 dark:bg-gray-900 p-6">
      <h1 className="text-3xl font-bold text-center text-gray-900 dark:text-white">Job Listings</h1>

      {loading && <p className="text-center text-gray-500 dark:text-gray-300">Loading jobs...</p>}
      {error && <p className="text-center text-red-500 dark:text-red-400">{error}</p>}

      <div className="mt-6 grid gap-6 md:grid-cols-2 lg:grid-cols-3">
        {!loading && jobs.length > 0 ? (
          jobs.map((job) => (
            <div key={job.id} className="p-4 bg-white dark:bg-gray-800 rounded-lg shadow-md">
              <h2 className="text-xl font-semibold text-gray-900 dark:text-white">{job.title}</h2>
              <p className="text-gray-600 dark:text-gray-300">{job.company}</p>
              <p className="mt-2 text-gray-700 dark:text-gray-400">{job.description}</p>
              <a
                href={/jobs/${job.id}}
                className="mt-4 inline-block text-blue-500 hover:underline dark:text-blue-400"
              >
                View Details
              </a>
            </div>
          ))
        ) : (
          !loading && <p className="text-center text-gray-600 dark:text-gray-300">No jobs available</p>
        )}
      </div>
    </div>
  );
}
